---

- name: Package prerequisites
  apt: name='{{ item }}' state=present
  with_items:
  - curl
  - gcc
  - make
  - perl-doc
  - libmodule-build-perl
  - perlbrew
  - tar
  - patch
  - unzip
  become: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: [ perlbrew, prereq ]

- name: Package prerequisites
  yum: name='{{ item }}' state=present
  with_items:
  - curl
  - gcc
  - make
  - bzip2
  - perl
  - tar
  - patch
  - unzip
  become: yes
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

- name: Make PERLBREW_ROOT
  file: path='{{ perlbrew_root }}' owner='{{ perlbrew_user }}' mode=0755 state=directory
  become: yes
  become_user: '{{ perlbrew_user }}'
  tags: [ perlbrew ]

- name: Install perlbrew
  become: yes
  become_user: '{{ perlbrew_user }}'
  shell: curl -L http://install.perlbrew.pl | bash creates="{{ perlbrew_root }}/bin/perlbrew"
  register: install_perlbrew
  tags: [ perlbrew ]

- set_fact:
    perlbrew_bin: PERLBREW_ROOT={{ perlbrew_root }} {{ perlbrew_root}}/bin/perlbrew
  tags: [ perlbrew ]

- name: Make sure ~/.bashrc exists
  file: path='~{{ perlbrew_user }}/.bashrc' state=touch mode=0644 force=no
  become: yes
  become_user: '{{ perlbrew_user }}'

- name: Init ~/.bashrc
  become: yes
  become_user: '{{ perlbrew_user }}'
  lineinfile: dest='{{ item.dest }}' line='{{ item.line }}'
  with_items:
  - { dest: '~{{ perlbrew_user }}/.bashrc', line: 'export PERLBREW_ROOT={{ perlbrew_root }}' }
  - { dest: '~{{ perlbrew_user }}/.bashrc', line: '. ${PERLBREW_ROOT}/etc/bashrc' }
  - { dest: '~{{ perlbrew_user }}/.bashrc', line: '. ${PERLBREW_ROOT}/etc/perlbrew-completion.bash' }
  tags: [ perlbrew, bashrc ]

- name: Install {{ perl_version }} (may take some time...)
  become: yes
  become_user: '{{ perlbrew_user }}'
  shell: "{{ perlbrew_bin }} install {{ perl_version }} --as {{ perlbrew_as | default(perl_version) }} --notest -Duseshrplib --force creates='{{ perlbrew_root }}/perls/{{ perlbrew_as | default(perl_version) }}'"
  register: perlbrew_build_output
  tags: [ perlbrew ]

- name: Fail if Perl not installed correctly
  fail: msg="Perlbrew could not build Perl. Check the build log"
  when: "perlbrew_build_output.changed == True and  perlbrew_as | default(perl_version) + ' is successfully installed.' not in perlbrew_build_output.stdout_lines"

- name: Install cpanm
  become: yes
  become_user: '{{ perlbrew_user }}'
  shell: "{{ perlbrew_bin }} install-cpanm creates='{{ perlbrew_root }}/bin/cpanm'"
  tags: [ perlbrew ]

- name: Use Perl {{ perl_version }}
  become: yes
  become_user: '{{ perlbrew_user }}'
  shell: PERLBREW_BASHRC_VERSION=1 {{ perlbrew_bin }} switch {{ perlbrew_as | default(perl_version) }}
  when: switch_to_new_perl
  tags: [ perlbrew ]
